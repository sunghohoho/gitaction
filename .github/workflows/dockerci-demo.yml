# This is a basic workflow to help you get started with Actions

name: Push Docker Image to Docker Hub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev, master" branch
  push:
    branches: [ "dev", "master" ]
    tags:
      - "**"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  push:  # 작업 이름은 push
    # The type of runner that the job will run on, 
    runs-on: ubuntu-latest    #빌드에 사용할 ubuntu:latest 머신 시작

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout    #runner에 저장소 코드를 다운로드
        uses: actions/checkout@v2    # 특정 브랜치로 checkout 하는 jobs 실행
      # Runs a single command using the runners shell
      - name: Run a one-line script  #사용자 정의
        id: docker_meta    # 변수 값으로 하위 코드에서 output으로 사용 가능
        uses: crazy-max/ghaction-docker-meta@v1  #사용할 동작
        with :          #동작에 대한 iunput값
          images: imsungho/nodejs-ci
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Set up QEMU    # QEMU 하이퍼 바이저 사용
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx  #Buildx는 다른 플랫폼용으로 빌드할 수 있음
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub     #도커 허브 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true      #빌드 후 배포 여부 확인
          tags: ${{ steps.docker_meta.outputs.tags }}  #빌드 시 위에서 지정한 태그 사용 지정
          labels: ${{ steps.docker_meta.outputs.labels }}  #빌드 시 위에서 지정한 라벨 사용 지정
